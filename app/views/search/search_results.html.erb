<fieldset disabled>
<div class="form-group">
  <%= label_tag :title %>
  <% if current_user&.can_use_regex_search? %>
    <%= check_box_tag :title_is_regex, 1, @search_params[:title_is_regex] %> <span class="text-muted">regex</span>
    <%= check_box_tag :title_is_inverse_regex, 1, @search_params[:title_is_inverse_regex] %> <span class="text-muted">invert</span>
  <% end %>
  <%= text_field_tag :title, @search_params[:title], placeholder: "*", class: "form-control" %>
</div>
<div class="form-group">
  <%= label_tag :body %>
  <%= check_box_tag :body_is_like, 1, @search_params[:body_is_like] %>
  <span class="text-muted">
    LIKE (<a href="https://github.com/Charcoal-SE/metasmoke/wiki/FAQ:-search">?</a>)
  </span>
  <% if current_user&.can_use_regex_search? %>
    <%= check_box_tag :body_is_regex, 1, @search_params[:body_is_regex] %> <span class="text-muted">regex</span>
    <%= check_box_tag :body_is_inverse_regex, 1, @search_params[:body_is_inverse_regex] %> <span class="text-muted">invert</span>
  <% end %>
  <%= text_field_tag :body, @search_params[:body], placeholder: "*", class: "form-control" %>
</div>
<div class="form-group">
  <%= label_tag :username %>
  <% if current_user&.can_use_regex_search? %>
    <%= check_box_tag :username_is_regex, 1, @search_params[:username_is_regex] %> <span class="text-muted">regex</span>
    <%= check_box_tag :username_is_inverse_regex, 1, @search_params[:username_is_inverse_regex] %> <span class="text-muted">invert</span>
  <% end %>
  <%= text_field_tag :username, @search_params[:username], placeholder: "*", class: "form-control" %>
</div>
<div class="form-group">
  <%= label_tag :why %>
  <% if current_user&.can_use_regex_search? %>
    <%= check_box_tag :why_is_regex, 1, @search_params[:why_is_regex] %> <span class="text-muted">regex</span>
    <%= check_box_tag :why_is_inverse_regex, 1, @search_params[:why_is_inverse_regex] %> <span class="text-muted">invert</span>
  <% end %>
  <%= text_field_tag :why, @search_params[:why], placeholder: "*", class: "form-control" %>
</div>
<div class="form-group">
  <%= label_tag :or_search, "Use OR for text search (uses AND by default)" %>
  <%= check_box_tag :or_search, 1, @search_params[:or_search] %>
</div>
<div class="form-group">
  <% h = HTMLEntities.new %>
  <%= label_tag :site %>
  <%= select_tag :site, options_for_select(Site.select(:site_name, :id).all.order(:site_name).map {|s| [h.decode(s.site_name), s.id] }, @search_params[:site]), class: "form-control", include_blank: "All" %>
</div>

<div class="form-group">
  <%= label_tag :post_type %>
  <%= check_box_tag :post_type_include_unmatched, 1, @search_params[:post_type_include_unmatched] %> <span class="text-muted">include unmatched</span>
  <%= select_tag :post_type, options_for_select(%i[question answer], @search_params[:post_type]), class: "form-control", include_blank: "All" %>
</div>

<div class="form-group">
  <%= label_tag :feedback %>
  <%= select_tag :feedback, options_for_select(["true positive", "false positive", "NAA", "conflicted"], @search_params[:feedback]), class: "form-control", include_blank: "All" %>
</div>

<div class="form-group">
  <%= label_tag :autoflagged %>
  <%= select_tag :autoflagged, options_for_select(["Yes", "No"], @search_params[:autoflagged]), class: "form-control", include_blank: "All" %>
</div>

<div class="form-group">
  <%= label_tag :reason %>
  <%= select_tag :reason, options_from_collection_for_select(Reason.all.order(:reason_name), "id", "reason_name", @search_params[:reason]), class: "form-control", include_blank: "All" %>
</div>

<div class="form-group">
  <%= label_tag :user_reputation %>
  <div class="form-group row">
    <div class="col-md-1">
      <%= select_tag :user_rep_direction, options_for_select(%w[== <= >=], @search_params[:user_rep_direction]), include_blank: true,
                     class: "form-control" %>
    </div>

    <div class="col-md-1">
      <%= number_field_tag :user_reputation, @search_params[:user_reputation], class: "form-control" %>
    </div>
  </div>
</div>

<div class="form-group">
  <%= label_tag :edited, "Edited" %>
  <%= check_box_tag :edited, 1, @search_params[:edited] %>
</div>
</fieldset>
<ul class="nav nav-tabs">
  <li role="presentation" class="<%= "active" if params[:option].nil? and (params[:feedback_filter].nil? or params[:feedback_filter] == 'all') %>">
    <%= link_to "Results (#{@counts_by_accuracy_group.values.sum})", search_path(request.query_parameters.merge!({option: nil, feedback_filter: nil})) %>
  </li>
  <!--
  <li class="<%= 'active' if params[:feedback_filter] == 'tp' %>">
    <%= link_to "True positives (#{@counts_by_feedback[:is_tp]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "tp"})) %>
  </li>
  <li class="<%= 'active' if params[:feedback_filter] == 'fp' %>">
    <%= link_to "False positives (#{@counts_by_feedback[:is_fp]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "fp"})) %>
  </li>
  <li class="<%= 'active' if params[:feedback_filter] == 'naa' %>">
    <%= link_to "NAA (#{@counts_by_feedback[:is_naa]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "naa"})) %>
  </li>
  <li role="presentation" class="<%= "active" if params[:option] == "graphs" %>">
    <%= link_to "Graphs", search_path(request.query_parameters.to_h.merge({option: "graphs", anchor: "graphs"})) %>
  </li>
  -->
</ul>

<% if params[:option].nil? %>
  <table class="table">
    <%= render partial: "posts/post", collection: @results, as: :post %>
  </table>
  <div class="text-center">
    <%= will_paginate @results, renderer: BootstrapPagination::Rails %>
    <p class="text-muted">
      <%= link_to "JSON (still subject to paging limits)", search_path(params: request.query_parameters, format: :json) %>
    </p>
  </div>
<% else %>
  <div id="graphs">
    <% h = HTMLEntities.new %>
    <%= pie_chart @results.group(:site).count.map{ |k,v| {(k.nil? ? "Unknown" : h.decode(k.site_name))=>v} }.reduce(:merge).select{|k,v| k != "Unknown"}.sort_by {|k,v| v}.reverse %>

    <%= line_chart [{name: "True positives", data: @results.where(is_tp: true).group_by_day('`posts`.`created_at`', range: 1.month.ago.to_date..Time.now).count}, {name: "False positives", data: @results.where(is_fp: true).group_by_day('`posts`.`created_at`', range: 1.month.ago.to_date..Time.now).count}], colors: ["green", "red"], library: {"tooltip" => {'shared' => 'true'} } %>
  </div>
<% end %>
