<ul class="nav nav-tabs">
  <li role="presentation" class="<%= "active" if params[:option].nil? and (params[:feedback_filter].nil? or params[:feedback_filter] == 'all') %>">
    <%= link_to "Results (#{@counts_by_accuracy_group.values.sum})", search_path(request.query_parameters.merge!({option: nil, feedback_filter: nil})) %>
  </li>
  <li class="<%= 'active' if params[:feedback_filter] == 'tp' %>">
    <%= link_to "True positives (#{@counts_by_feedback[:is_tp]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "tp"})) %>
  </li>
  <li class="<%= 'active' if params[:feedback_filter] == 'fp' %>">
    <%= link_to "False positives (#{@counts_by_feedback[:is_fp]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "fp"})) %>
  </li>
  <li class="<%= 'active' if params[:feedback_filter] == 'naa' %>">
    <%= link_to "NAA (#{@counts_by_feedback[:is_naa]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "naa"})) %>
  </li>
  <li role="presentation" class="<%= "active" if params[:option] == "graphs" %>">
    <%= link_to "Graphs", search_path(request.query_parameters.to_h.merge({option: "graphs", anchor: "graphs"})) %>
  </li>
</ul>

<% if params[:option].nil? %>
  <table class="table">
    <%= render partial: "posts/post", collection: @results, as: :post %>
  </table>
  <% if false %>
  <div class="text-center">
    <%= will_paginate @results, renderer: BootstrapPagination::Rails %>
    <p class="text-muted">
      <%= link_to "JSON (still subject to paging limits)", search_path(params: request.query_parameters, format: :json) %>
    </p>
  </div>
  <% end %>
<% else %>
  <div id="graphs">
    <% h = HTMLEntities.new %>
    <%= pie_chart @results.group(:site).count.map{ |k,v| {(k.nil? ? "Unknown" : h.decode(k.site_name))=>v} }.reduce(:merge).select{|k,v| k != "Unknown"}.sort_by {|k,v| v}.reverse %>

    <%= line_chart [{name: "True positives", data: @results.where(is_tp: true).group_by_day('`posts`.`created_at`', range: 1.month.ago.to_date..Time.now).count}, {name: "False positives", data: @results.where(is_fp: true).group_by_day('`posts`.`created_at`', range: 1.month.ago.to_date..Time.now).count}], colors: ["green", "red"], library: {"tooltip" => {'shared' => 'true'} } %>
  </div>
<% end %>
