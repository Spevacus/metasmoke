<h3><%= title 'Autoflagging Preferences' %></h3>
<h4>Getting started</h4>
<p>
    If you're trying to get started with autoflags for the first time, you'll need to:
</p>
<ul>
  <li>authorize metasmoke for write access to your Stack Exchange account (see "Clifford the Big Red Button" below)</li>
  <li>set up your preferences (below), which govern how many of your flags metasmoke can use per-site. You must set at least one preference.</li>
  <li><%= link_to 'set up your autoflagging conditions', url_for(controller: :flag_conditions, action: :index) %>, which govern how certain you want metasmoke to be a post is spam before using your account to flag it. You must set at least one flagging condition.</li>
</ul>
<h4>Authenticating metasmoke with your Stack Exchange account</h4>
<div class="panel panel-danger">
  <div class="panel-heading">
    <h3 class="panel-title">Clifford the Big Red Button</h3>
  </div>
  <div class="panel-body">
    <p>
      <strong class="text-danger">Warning:</strong> for all the joking about, this is serious. By authenticating metasmoke for write access to your Stack Exchange account, you
      are explicitly consenting to your Stack Exchange account being used to cast flags automatically based on data collected by SmokeDetector. While we believe this has a high
      rate of accuracy and have designed the system to reflect this, <i>flags cast using your account are your responsibility</i>, and having many invalid flags can, in some cases,
      result in your SE account being suspended, or being temporarily banned from flagging. Only authenticate metasmoke for write access if you accept this responsibility.
    </p>
    <hr/>
    <% if !current_user.write_authenticated %>
      <p class="text-info">If you have not already done so, you need to first authenticate metasmoke for write access with Stack Exchange; <strong><%= link_to 'you can do that here', url_for(controller: :authentication, action: :status) %></strong>.</p>
      <p class="text-info">The above link will also show you if metasmoke thinks it's already write-authorized and allow you to re-authorize, if you've removed the authorization in your Stack Exchange preferences (metasmoke won't know you've removed authorization until it tries to flag).</p>
    <% else %>
      <input id="red-button" name="red-button" type="checkbox" <%= 'checked' if current_user.flags_enabled %> <%= 'disabled' if (FlagSetting['registration_enabled'] == '0' || !current_user.has_role?(:flagger)) && !current_user.flags_enabled %> />
      <label for="red-button">Use my account to cast flags automatically</label>
      <% if FlagSetting['registration_enabled'] == '0' && !current_user.flags_enabled %>
        <p class="text-muted">Registration is currently disabled.</p>
      <% end %>
    <% end %>
  </div>
</div>

<h4>Preferences: maximum number of flags metasmoke will use</h4>
<p>Each preference below sets the maximum number of your flags metasmoke will use on a site or group of sites. In order for metasmoke to use your account for autoflagging, you need to have at least one such preference set.</p>
<table class="table table-striped">
  <thead>
    <tr>
      <th class="text-muted">ID</th>
      <th>Site Count</th>
      <th>Flags Used Today</th>
      <th colspan="2"></th>
    </tr>
  </thead>
  <tbody>
    <% @preferences.each do |pref| %>
      <tr>
        <td class="text-muted"><%= pref.id %></td>
        <td><%= pref.sites.count %></td>
        <td><%= current_user.flag_logs.where(is_auto: true, success: true).where('created_at > ?', 1.day.ago).count %></td>
        <td><%= link_to 'Edit', url_for(controller: :user_site_settings, action: :edit, id: pref.id) %></td>
        <td><%= link_to 'Delete', url_for(controller: :user_site_settings, action: :destroy, id: pref.id),
         method: :delete, data: { confirm: 'Are you sure?' }, class: 'text-danger' %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<% if FlagSetting['registration_enabled'] == '1' %>
  <%= link_to 'Add new maximum flags per site preference', url_for(controller: :user_site_settings, action: :new) %><br/>
  <p><em>Don't want to set this up yourself? <%= link_to "There's a wizard for that.", url_for(controller: :flag_conditions, action: :one_click_setup) %></em></p>
<% else %>
  <p class="text-muted"><em>Registration for autoflagging is currently closed.</em></p>
<% end %>
